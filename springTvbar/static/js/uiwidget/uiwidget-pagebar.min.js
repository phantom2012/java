(function (a) {
    a.uiwidget = a.uiwidget || {};
    a.uiwidget.PageBar = function (c, b) {
        a.extend(this, b);
        this.target = c;
        this.init()
    };
    a.uiwidget.PageBar.prototype = {preText: "上一页", nextText: "下一页", displayText: "共 {0} 页，共 {1} 条", preEl: null, nextEl: null, pageNoEl: null, limitPageCount: 10, hideLastPage: false, showTotalText: false, hideFirstPage: true, showPageButton: true, goToCallBack: function () {
    }, init: function (b) {
        var c = this;
        if (c.limitPageCount < 5) {
            c.limitPageCount = 5
        }
        if (b) {
            a.extend(this, b)
        }
        if (!c.url) {
            c.render({totalCount: c.totalCount});
            c.changePage(c);
            return
        }
        c.params.pageNo = c.pageNo;
        c.params.pageSize = c.pageSize;
        a.ajax({url: c.url, type: c.type || "post", dataType: "json", data: c.params, success: function (d) {
            c.render(d);
            if (c.getDataCallBack) {
                c.getDataCallBack(c)
            }
            c.changePage(c)
        }})
    }, render: function (h) {
        var g = this;
        var d = g.totalCount = h.totalCount;
        if (isNaN(d) || d <= 0) {
            g.target.empty();
            return
        }
        var c = g.pageSize;
        var b = g.pageNo;
        var e = parseInt(d / c);
        if (d % c != 0) {
            e++
        }
        g.pageCount = e;
        if (g.hideFirstPage && e <= 1) {
            g.target.hide();
            return
        }
        var f = '<ul class="page-bar">';
        f += '<li title="上一页" style="display:none;"><a class="page-bar-pre" href="javascript:void(0);">' + g.preText + "</a></li>";
        f += '<li title="下一页" style="display:none;"><a class="page-bar-next" href="javascript:void(0);">' + g.nextText + "</a></li>";
        if (g.showTotalText) {
            f += '<li class="page-total">' + g.getDisplayText(e, d) + "</li>"
        }
        f += "</ul>";
        a(g.target).html(f);
        g.target.show();
        if (g.showPageButton) {
            g.preEl = null;
            g.nextEl = null;
            g.pageNoEl = null;
            g.getPreEl().parent().show();
            g.getNextEl().parent().show();
            g.getPreEl().click(function () {
                if (g.pageNo > 1) {
                    g.pageNo--;
                    g.handleLimitPageCount();
                    g.getCurrentEl().attr("class", "page-bar-no");
                    a("#" + g.target.attr("id") + "_pageBar_" + g.pageNo).attr("class", "page-bar-current");
                    g.changePage(g)
                }
                return false
            });
            g.getNextEl().click(function () {
                if (g.pageNo < e) {
                    g.pageNo++;
                    g.handleLimitPageCount();
                    g.getCurrentEl().attr("class", "page-bar-no");
                    a("#" + g.target.attr("id") + "_pageBar_" + g.pageNo).attr("class", "page-bar-current");
                    g.changePage(g)
                }
                return false
            })
        }
        g.handleLimitPageCount();
        a("#" + g.target.attr("id") + "_pageBar_" + g.pageNo).attr("class", "page-bar-current")
    }, addPageNoHtml: function (b) {
        var c = this;
        return'<li><a id="' + c.target.attr("id") + "_pageBar_" + b + '" class="page-bar-no"  href="javascript:void(0);">' + b + "</a></li>"
    }, handleLimitPageCount: function () {
        var g = this;
        var d = g.pageCount;
        if (g.limitPageCount) {
            g.getPageNoEl().parent().remove();
            g.getCurrentEl().parent().remove();
            g.getOmitEl().remove();
            var h = '<li class="page-bar-omit" style="font-weight: bold;">...</li>';
            var f = "";
            var e = j = pageNo = g.pageNo, k = 1, b = true;
            e--;
            j++;
            f += g.addPageNoHtml(pageNo);
            while (k < g.limitPageCount) {
                if (b) {
                    if (e > 0) {
                        pageNo = e;
                        f = g.addPageNoHtml(pageNo) + f;
                        e--;
                        k++
                    }
                    b = false
                } else {
                    if (j <= d) {
                        pageNo = j;
                        f += g.addPageNoHtml(pageNo);
                        j++;
                        k++
                    }
                    b = true
                }
                if (j > d && e <= 0) {
                    break
                }
            }
            g.getPreEl().parent().after(f);
            g.getPageNoEl().first().attr("id", g.target.attr("id") + "_pageBar_" + 1).text(1);
            if (g.pageNo > g.limitPageCount - 2 && g.pageCount > g.limitPageCount) {
                g.getPageNoEl().first().parent().after(h)
            }
            if (g.hideLastPage) {
                if (g.pageNo < d && g.pageCount > g.limitPageCount) {
                    g.getPageNoEl().last().parent().after(h)
                }
            } else {
                if (g.pageCount > g.limitPageCount) {
                    g.getPageNoEl().last().parent().before(h)
                }
                g.getPageNoEl().last().attr("id", g.target.attr("id") + "_pageBar_" + d).text(d)
            }
        }
        g.getPageNoEl().click(function () {
            g.pageNo = parseInt(a(this).text());
            g.handleLimitPageCount();
            g.getCurrentEl().attr("class", "page-bar-no");
            a("#" + g.target.attr("id") + "_pageBar_" + g.pageNo).attr("class", "page-bar-current");
            g.changePage(g);
            return false
        })
    }, format: function (c) {
        var b = Array.prototype.slice.call(arguments, 1);
        if (!c) {
            throw"format is null"
        }
        return c.replace(/\{(\d+)\}/g, function (d, e) {
            return b[e]
        })
    }, getDisplayText: function (c, b) {
        return this.format(this.displayText, "<span>" + c + "</span>", "<span>" + b + "</span>")
    }, getLastPage: function () {
        var b = this;
        var c = parseInt(b.totalCount / b.pageSize);
        if (b.totalCount % b.pageSize != 0) {
            c++
        }
        return c
    }, goTo: function (b) {
        var c = this;
        if (b && a("#" + c.target.attr("id") + "_pageBar_" + b).length > 0) {
            c.pageNo = b;
            c.goToCallBack();
            a("#" + c.target.attr("id") + "_pageBar_" + c.pageNo).click()
        }
    }, getPreEl: function () {
        return this.preEl || (this.preEl = this.target.find(".page-bar-pre"))
    }, getNextEl: function () {
        return this.nextEl || (this.nextEl = this.target.find(".page-bar-next"))
    }, getPageNoEl: function () {
        return(this.pageNoEl = this.target.find(".page-bar-no"))
    }, getCurrentEl: function () {
        return this.target.find(".page-bar-current")
    }, getOmitEl: function () {
        return this.target.find(".page-bar-omit")
    }};
    a.fn.pageBar = function (b) {
        return new a.uiwidget.PageBar(this, b)
    }
})(jQuery);