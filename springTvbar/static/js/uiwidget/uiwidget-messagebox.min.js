!function (a) {
    a.uiwidget = a.uiwidget || {}, a.uiwidget.Messagebox = function (b, c) {
        a.extend(this, c), this.messagebox = a(b);
        var d = this.messagebox.data("maskId");
        d || this.messagebox.data("maskId", "msg-box-mask" + (new Date).getTime()), this.init(), this.render()
    };
    var b = !0;
    a.uiwidget.Messagebox.prototype = {OK_TEXT: "确 定", CANCEL_TEXT: "取 消", CLOSE_TEXT: "关 闭", ASK_TITLE: "操作提示", ALERT_TITLE: "操作提示", SUCCESS_TITLE: "操作提示", ERROR_TITLE: "操作提示", WIDTH: 500, init: function () {
        var b = this;
        a(window).bind("resize", function () {
            b.reLayout()
        }), a(window).bind("scroll", function () {
            b.reLayout()
        })
    }, render: function () {
    }, renderWindow: function () {
        var b = a(['<div class="message_box" onselectstart="return false;" style="-moz-user-select: none;width:' + WIDTH + 'px;"><div class="msg_box_title"><div class="msg_box_title_left"><div class="msg_box_title_right">', '<div class="msg_box_title_midle"></div><span class="msg_box_close" title="关闭" ></span>', "</div></div></div>", '<div class="msg_box_content" style="width:' + (WIDTH - 6) + 'px;">', '<div class="msg-window-ico-prompt"></div><div class="msg-window-msg-content" style="width:' + (WIDTH - 146) + 'px;"><table cellpadding="0" cellspacing="0"><tr><td></td></tr></table>', '</div><div class="clearfix"></div>', '<div class="msg-window-button" >', "</div> ", "</div>", '<div class="msg_box_bottom"><div class="msg_box_bottom_left"><div class="msg_box_bottom_rigth"><div class="msg_box_bottom_middle"></div></div></div></div></div>'].join(""));
        return a(document.body).append(b), this.titleEl = b.find("div.msg_box_title_midle"), this.msgEl = b.find("div.msg_box_content td"), this.iconEl = b.find("div.msg_box_content>div")[0], this.buttonEl = b.find("div.msg-window-button"), b
    }, renderMask: function () {
        var d, b = this.messagebox.data("maskId"), c = a("#" + b);
        return c[0] ? !1 : (d = a('<div class="mask" id="' + b + '"><iframe frameborder="0" style="width:100%;height:100%;background-color:#000;filter: alpha(opacity=0);-moz-opacity: 0;opacity: 0;"></iframe></div>'), a(document.body).append(d), d)
    }, message: function (a) {
        WIDTH = a.width ? a.width : 500, b = "boolean" == typeof a.IsAutoClose ? a.IsAutoClose : !0, this.show(), a.type ? this[a.type](a) : this.customCommand(a)
    }, customCommand: function (c) {
        var d, e, f, g;
        c.title && this.setTitle(c.title), this.setMsg(c.msg), c.iconCls && this.setIconCls(c.iconCls), this.reSetWidth(WIDTH), d = this.getWindow(), e = document.documentElement.scrollLeft ? document.documentElement.scrollLeft : document.body.scrollLeft, f = document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop, d.css("left", (a(window).width() - d.eq(0).width()) / 2 + e), d.css("top", (a(window).height() - d.eq(0).height()) / 2 + f), d.css("z-index", 30024), c.buttons && this.setButton(c.buttons), g = this, this.windowEl.find(".msg_box_btn").each(function (d) {
            a(this).bind("click", function () {
                c.fn && c.fn({index: d}, c.msg, g), b && g.hide()
            }), a(this).find("li.middle-normal").hover(function () {
                a(this).prev().addClass("left-over"), a(this).addClass("middle-over"), a(this).next().addClass("right-over")
            }, function () {
                a(this).prev().removeClass("left-over"), a(this).removeClass("middle-over"), a(this).next().removeClass("right-over")
            })
        }), this.windowEl.find("span.msg_box_close").unbind("click"), this.windowEl.find("span.msg_box_close").bind("click", function () {
            c.fn && c.fn({index: -1}, c.msg), g.hide()
        })
    }, ask: function (a) {
        this.setTitle(this.ASK_TITLE), this.setIconCls("msg-window-ico-prompt"), this.setButton([
            {text: this.OK_TEXT, iconCls: "ico-btn-order-ok"},
            {text: this.CANCEL_TEXT, iconCls: "ico-btn-order-close"}
        ]), this.customCommand(a)
    }, alert: function (a) {
        this.setTitle(this.ALERT_TITLE), this.setIconCls("msg-window-ico-warning"), this.setButton([
            {text: this.OK_TEXT, iconCls: "ico-btn-order-ok"}
        ]), this.customCommand(a)
    }, success: function (a) {
        this.setTitle(this.SUCCESS_TITLE), this.setIconCls("msg-window-ico-success"), this.setButton([
            {text: this.OK_TEXT, iconCls: "ico-btn-order-ok"}
        ]), this.customCommand(a)
    }, error: function (a) {
        this.setTitle(this.ERROR_TITLE), this.setIconCls("msg-window-ico-error"), this.setButton([
            {text: this.OK_TEXT, iconCls: "ico-btn-order-ok"}
        ]), this.customCommand(a)
    }, pay: function (a) {
        this.setTitle("操作提示"), this.setIconCls("msg-window-ico-pay"), this.setButton([
            {text: "同意", iconCls: "ico-btn-order-ok"},
            {text: "不同意", iconCls: "ico-btn-order-close"},
            {text: "同意不再提醒", iconCls: "msg-btn-long"}
        ]), this.customCommand(a)
    }, getWindow: function () {
        return this.windowEl || (this.windowEl = this.renderWindow())
    }, getMask: function () {
        return this.maskEl || (this.maskEl = this.renderMask())
    }, setTitle: function (a) {
        this.titleEl.html(a)
    }, setMsg: function (a) {
        this.msgEl.html(a)
    }, setIconCls: function (a) {
        this.iconEl.className = a
    }, reSetWidth: function (a) {
        var b = this.getWindow();
        b.find("div.msg_box_content").css("width", a - 6), b.css("width", a)
    }, setButton: function (a) {
        this.buttonEl.empty();
        for (var b = 0; b < a.length; b++)a[b].iconCls ? b > 0 ? this.buttonEl.append(['&nbsp;&nbsp;&nbsp;&nbsp;<input type="button" class="msg_box_btn ', a[b].iconCls, '" id="delete_ajax" value="', a[b].text, '">'].join("")) : this.buttonEl.append(['<input type="button" class="msg_box_btn ', a[b].iconCls, '" id="delete_ajax" value="', a[b].text, '">'].join("")) : this.buttonEl.append(['<ul><li class="left-normal"></li><li class="middle-normal">', a[b].text, '</li><li class="right-normal"></li></ul>'].join(""))
    }, show: function () {
        var c, d, b = this.getWindow();
        b.css("width", WIDTH), b.find("div.msg_box_content").css("width", WIDTH - 6), b.find("div.msg-window-msg-content").css("width", WIDTH - 146), b.show(), this.getMask(), c = document.body.scrollHeight, document.body.scrollHeight <= document.body.clientHeight && (c = document.body.clientHeight), d = document.body.scrollWidth, document.body.scrollWidth <= document.body.clientWidth && (d = document.body.clientWidth), a.browser.mozilla && (c = a(document).height(), d = a(document).width()), this.getMask().width(d).height(c).show()
    }, hide: function () {
        this.getWindow().hide(), this.getMask().hide()
    }, reLayout: function () {
        var e, f, b = this.getWindow(), c = document.documentElement.scrollLeft ? document.documentElement.scrollLeft : document.body.scrollLeft, d = document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop;
        b.css("left", (a(window).width() - b.eq(0).width()) / 2 + c), b.css("top", (a(window).height() - b.eq(0).height()) / 2 + d), e = document.body.scrollHeight, document.body.scrollHeight <= document.body.clientHeight && (e = document.body.clientHeight), f = document.body.scrollWidth, document.body.scrollWidth <= document.body.clientWidth && (f = document.body.clientWidth), a.browser.mozilla && (e = a(document).height(), f = a(document).width()), this.getMask().width(f).height(e)
    }}, a.messagebox = function (b) {
        return a.uiwidget.Messagebox.instance = a.uiwidget.Messagebox.instance || new a.uiwidget.Messagebox(document.body, {}), a.uiwidget.Messagebox.instance.message(b)
    }
}(jQuery);