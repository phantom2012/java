;
(function ($) {
    $.uiwidget = $.uiwidget || {};
    $.uiwidget.Messagebox = function (target, cfg) {
        $.extend(this, cfg);
        this.messagebox = $(target);
        this.init();
        this.render()
    };
    var IsAutoClose = true;
    $.uiwidget.Messagebox.prototype = {OK_TEXT: '确 定', CANCEL_TEXT: '取 消', CLOSE_TEXT: '关 闭', ASK_TITLE: '操作提示', ALERT_TITLE: '操作提示', SUCCESS_TITLE: '操作提示', ERROR_TITLE: '操作提示', WIDTH: 500, init: function () {
        var SELF = this;
        $(window).bind('resize', function () {
            SELF.reLayout()
        });
        $(window).bind('scroll', function () {
            SELF.reLayout()
        })
    }, render: function () {
    }, renderWindow: function () {
        var windowContent = $(['<div class="message_box" style="width:' + WIDTH + 'px;"><div class="msg_box_title"><div class="msg_box_title_left"><div class="msg_box_title_right">', '<div class="msg_box_title_midle"></div><span class="msg_box_close" title="关闭" ></span>', '</div></div></div>', '<div class="msg_box_content" style="width:' + (WIDTH - 6) + 'px;">', '<div class="msg-window-ico-prompt"></div><div class="msg-window-msg-content" style="width:' + (WIDTH - 146) + 'px;"><table cellpadding="0" cellspacing="0"><tr><td></td></tr></table>', '</div><div class="clearfix"></div>', '<div class="msg-window-button" >', '</div> ', '</div>', '<div class="msg_box_bottom"><div class="msg_box_bottom_left"><div class="msg_box_bottom_rigth"><div class="msg_box_bottom_middle"></div></div></div></div></div>'].join(''));
        $(document.body).append(windowContent);
        this.titleEl = windowContent.find('div.msg_box_title_midle');
        this.msgEl = windowContent.find('div.msg_box_content td');
        this.iconEl = windowContent.find('div.msg_box_content>div')[0];
        this.buttonEl = windowContent.find('div.msg-window-button');
        return windowContent
    }, renderMask: function () {
        var maskContent = $('<div class="mask"><iframe frameborder="0" style="width:100%;height:100%;background-color:#000;filter: alpha(opacity=0);-moz-opacity: 0;opacity: 0;"></iframe></div>');
        $(document.body).append(maskContent);
        return maskContent
    }, message: function (args) {
        if (args.width) {
            WIDTH = args.width
        } else {
            WIDTH = 500
        }
        if (typeof args.IsAutoClose == "boolean") {
            IsAutoClose = args.IsAutoClose
        } else {
            IsAutoClose = true
        }
        this.show();
        if (args.type)this[args.type](args); else this.customCommand(args)
    }, customCommand: function (args) {
        if (args.title)this.setTitle(args.title);
        this.setMsg(args.msg);
        if (args.iconCls)this.setIconCls(args.iconCls);
        this.reSetWidth(WIDTH);
        var mw = this.getWindow();
        var scrollLeft = (document.documentElement.scrollLeft ? document.documentElement.scrollLeft : document.body.scrollLeft);
        var scrollTop = (document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop);
        mw.css('left', ($(window).width() - mw.eq(0).width()) / 2 + scrollLeft);
        mw.css('top', ($(window).height() - mw.eq(0).height()) / 2 + scrollTop);
        mw.css('z-index', 30024);
        if (args.buttons)this.setButton(args.buttons);
        var t = this;
        this.windowEl.find(".msg_box_btn").each(function (i) {
            $(this).bind("click", function () {
                if (args.fn)args.fn({index: i}, args.msg, t);
                if (IsAutoClose) {
                    t.hide()
                }
            });
            $(this).find("li.middle-normal").hover(function () {
                $(this).prev().addClass('left-over');
                $(this).addClass('middle-over');
                $(this).next().addClass('right-over')
            }, function () {
                $(this).prev().removeClass('left-over');
                $(this).removeClass('middle-over');
                $(this).next().removeClass('right-over')
            })
        });
        this.windowEl.find("span.msg_box_close").unbind("click");
        this.windowEl.find("span.msg_box_close").bind("click", function () {
            if (args.fn)args.fn({index: -1}, args.msg);
            t.hide()
        })
    }, ask: function (args) {
        this.setTitle(this.ASK_TITLE);
        this.setIconCls('msg-window-ico-prompt');
        this.setButton([
            {text: this.OK_TEXT, iconCls: 'ico-btn-order-ok'},
            {text: this.CANCEL_TEXT, iconCls: 'ico-btn-order-close'}
        ]);
        this.customCommand(args)
    }, alert: function (args) {
        this.setTitle(this.ALERT_TITLE);
        this.setIconCls('msg-window-ico-warning');
        this.setButton([
            {text: this.OK_TEXT, iconCls: 'ico-btn-order-ok'}
        ]);
        this.customCommand(args)
    }, success: function (args) {
        this.setTitle(this.SUCCESS_TITLE);
        this.setIconCls('msg-window-ico-success');
        this.setButton([
            {text: this.OK_TEXT, iconCls: 'ico-btn-order-ok'}
        ]);
        this.customCommand(args)
    }, error: function (args) {
        this.setTitle(this.ERROR_TITLE);
        this.setIconCls('msg-window-ico-error');
        this.setButton([
            {text: this.OK_TEXT, iconCls: 'ico-btn-order-ok'}
        ]);
        this.customCommand(args)
    }, pay: function (args) {
        this.setTitle('操作提示');
        this.setIconCls('msg-window-ico-pay');
        this.setButton([
            {text: '同意', iconCls: 'ico-btn-order-ok'},
            {text: '不同意', iconCls: 'ico-btn-order-close'},
            {text: '同意不再提醒', iconCls: 'msg-btn-long'}
        ]);
        this.customCommand(args)
    }, getWindow: function () {
        return this.windowEl || (this.windowEl = this.renderWindow())
    }, getMask: function () {
        return this.maskEl || (this.maskEl = this.renderMask())
    }, setTitle: function (title) {
        this.titleEl.html(title)
    }, setMsg: function (text) {
        this.msgEl.html(text)
    }, setIconCls: function (css) {
        this.iconEl.className = css
    }, reSetWidth: function (w) {
        var currentObj = this.getWindow();
        currentObj.find("div.msg_box_content").css("width", w - 6);
        currentObj.css("width", w)
    }, setButton: function (buttons) {
        this.buttonEl.empty();
        for (var i = 0; i < buttons.length; i++) {
            if (buttons[i].iconCls) {
                if (i > 0) {
                    this.buttonEl.append(['&nbsp;&nbsp;&nbsp;&nbsp;<input type="button" class="msg_box_btn ', buttons[i].iconCls, '" id="delete_ajax" value="', buttons[i].text, '">'].join(''))
                } else {
                    this.buttonEl.append(['<input type="button" class="msg_box_btn ', buttons[i].iconCls, '" id="delete_ajax" value="', buttons[i].text, '">'].join(''))
                }
            } else {
                this.buttonEl.append(['<ul><li class="left-normal"></li><li class="middle-normal">', buttons[i].text, '</li><li class="right-normal"></li></ul>'].join(''))
            }
        }
    }, show: function () {
        var mv = this.getWindow();
        mv.css("width", WIDTH);
        mv.find("div.msg_box_content").css("width", WIDTH - 6);
        mv.find("div.msg-window-msg-content").css("width", WIDTH - 146);
        mv.show();
        this.getMask();
        var newHeight = document.body.scrollHeight;
        if (document.body.scrollHeight <= document.body.clientHeight) {
            newHeight = document.body.clientHeight
        }
        var newWidth = document.body.scrollWidth;
        if (document.body.scrollWidth <= document.body.clientWidth) {
            newWidth = document.body.clientWidth
        }
        if ($.browser.mozilla) {
            newHeight = $(document).height();
            newWidth = $(document).width()
        }
        $("div.mask").width(newWidth).height(newHeight).show()
    }, hide: function () {
        this.getWindow().hide();
        this.getMask().hide()
    }, reLayout: function () {
        var mw = this.getWindow();
        var scrollLeft = (document.documentElement.scrollLeft ? document.documentElement.scrollLeft : document.body.scrollLeft);
        var scrollTop = (document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop);
        mw.css('left', ($(window).width() - mw.eq(0).width()) / 2 + scrollLeft);
        mw.css('top', ($(window).height() - mw.eq(0).height()) / 2 + scrollTop);
        var newHeight = document.body.scrollHeight;
        if (document.body.scrollHeight <= document.body.clientHeight) {
            newHeight = document.body.clientHeight
        }
        var newWidth = document.body.scrollWidth;
        if (document.body.scrollWidth <= document.body.clientWidth) {
            newWidth = document.body.clientWidth
        }
        if ($.browser.mozilla) {
            newHeight = $(document).height();
            newWidth = $(document).width()
        }
        $("div.mask").width(newWidth).height(newHeight)
    }};
    $.messagebox = function (cfg) {
        $.uiwidget.Messagebox.instance = $.uiwidget.Messagebox.instance || new $.uiwidget.Messagebox(document.body, {});
        return $.uiwidget.Messagebox.instance.message(cfg)
    }
})(jQuery);